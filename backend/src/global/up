// import {
//     OnGatewayConnection,
//     OnGatewayDisconnect,
//     WebSocketGateway,
//     WebSocketServer,
// } from '@nestjs/websockets';
// import { Logger } from '@nestjs/common';
// import { Server, Socket } from 'socket.io';
// import { GroupService } from 'src/group/group.service';

// @WebSocketGateway({
//     cors: {
//         origin: 'http://localhost:5173',
//         methods: ['GET', 'POST'],
//         credentials: true,
//     },
// })
// export class GlobalGateway implements OnGatewayConnection, OnGatewayDisconnect {
//     @WebSocketServer()
//     server: Server;

//     private readonly logger = new Logger(GlobalGateway.name);
//     constructor(
//   private readonly groupService: GroupService
// ) {}
//     afterInit(server: Server) {
//         console.log('WebSocket Gateway initialized');
//     }

//     handleConnection(client: Socket) {
//         console.log(`Global client connected: ${client.id}`);

//         client.on('createGroup', (groupName: string, members: string[]) => {
//             try {
//                 console.log('msg hee', groupName, members)
//             } catch (error) {
                
//             }
//         })


//     }

//     handleDisconnect(client: Socket) {
//         console.log(`Global client disconnected: ${client.id}`);
//     }
// }
